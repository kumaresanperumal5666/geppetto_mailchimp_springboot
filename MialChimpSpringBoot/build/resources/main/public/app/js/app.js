/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
 build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Geppetto system Copyright - NewPortBay LLC </br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
 */

var app = angular.module('GepMirrow', ['ngRoute', 'rzModule']);

// configure our routes
app.config(['$routeProvider', function ($routeProvider) {

  $routeProvider
    .when('/landing_page-en', {
      templateUrl: 'app/views/en/landing_page-en.html',
      controller: 'HomeCtrl'
    })

    .when('/app_level', {
      controller: 'ApplicationLevelCtrl',
      cache: false,
      template: ' '
    })

    .when('/survey_result', {
      templateUrl: 'app/views/en/survey_result_Screen-en.html',
      controller: 'Survey_result_Default_Activity'
    })

    .when('/Survey_Create-en', {
      templateUrl: 'app/views/en/Survey_Create-en.html',
      controller: 'Survey_Default_Activity'
    })

    .when('/Survey_Create-es', {
      templateUrl: 'app/views/es/Survey_Create-es.html',
      controller: 'Survey_Default_Activity'
    })

    .when('/Survey_Create-ta', {
      templateUrl: 'app/views/ta/Survey_Create-ta.html',
      controller: 'Survey_Default_Activity'
    })

    .when('/surveys', {
      templateUrl: 'app/views/en/survey.html',
      controller: 'SurveyCtrl'
    })

    .when('/surveys/:id', {
      templateUrl: 'app/views/en/survey_builder.html',
      controller: 'SurveyBuilderCtrl'
    })

    .when('/Client_Screen-en', {
      templateUrl : 'app/views/en/Client_Screen-en.html',
      controller: 'Client_Default_Activity'
    })

    .when('/Client_Screen-es', {
      templateUrl : 'app/views/es/Client_Screen-es.html',
      controller: 'Client_Default_Activity'
    })

    .when('/Client_Screen-ta', {
      templateUrl : 'app/views/ta/Client_Screen-ta.html',
      controller: 'Client_Default_Activity'
    })

    .when('/country_Screen-en', {
      templateUrl : 'app/views/en/country_Screen-en.html',
      controller: 'Country_Default_Activity'
    })

    .when('/Product_Screen-en', {
      templateUrl : 'app/views/en/Product_Screen-en.html',
      controller: 'Product_Default_Activity'
    })

    .when('/Product_Screen-es', {
      templateUrl : 'app/views/es/Product_Screen-es.html',
      controller: 'Product_Default_Activity'
    })

    .when('/Product_Screen-ta', {
      templateUrl : 'app/views/ta/Product_Screen-ta.html',
      controller: 'Product_Default_Activity'
    })

    .otherwise('app_level');

}]);

app.directive('ckEditor', function () {
  return {
    require: '?ngModel',
    compile: function () {
      return function ($scope, elem, attr, ngModel) {
        var ck = CKEDITOR.replace(elem[0], {
          toolbar: 'Basic',
          uiColor: '#fafafa'
        });
        if (!ngModel) return;
        ck.on('instanceReady', function () {
          ck.setData(ngModel.$viewValue);
        });
        function updateModel() {
          $scope.$apply(function () {
            ngModel.$setViewValue(ck.getData());
          });
        }

        ck.on('change', updateModel);
        ck.on('key', updateModel);
        ck.on('dataReady', updateModel);
        ngModel.$render = function (value) {
          ck.setData(ngModel.$viewValue);
        };
      };
    }
  };
});


app.factory('ClientId', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });

app.factory('ProductId', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });

app.factory('CountryId', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });
app.factory('OptionId', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });

app.factory('QuestionId', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });

app.factory('SurveyId', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });

app.factory('Servey_resultId ', function () {
    var id = '';
    return {
      setId: function (id){
        this.id = id;
      },
      getId: function (){
        return this.id;
      }
    }
   });

app.factory('RestURL', function() {
  return {
  //  baseURL: 'http://localhost:8080/Mirrow/'
    baseURL: 'http://45.55.156.148:8080/Mirrow/'
  }
});
