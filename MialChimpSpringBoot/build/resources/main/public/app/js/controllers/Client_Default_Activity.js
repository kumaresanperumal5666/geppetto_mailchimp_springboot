/**
 *
 * @author Schubert Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Schubert System </br>
 * Schubert system Copyright - NewPortBay LLC copy_right_range</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/

app.controller("Client_Default_Activity", [ '$scope', '$rootScope', '$location', '$window', '$q', '$http', 'ClientId', 'RestURL',
				    function( $scope, $rootScope, $location, $window, $q, $http, ClientId, RestURL) {

		$scope.Client = {
		id: '',
		client_id : '', 
		client_name : '', 
		notes : '', 
		createdby : '', 
		create_date : '', 
		modifiedby : '', 
		modified_date : ''
		};

		
		
		$scope.init = function () {
			$scope.getAllClient();
		}
        
		
		$scope.closeModal = function () {
			$scope.getAllClient();
		}
		
		$scope.setClient = function(selectedClient) {
			if (selectedClient === undefined || selectedClient === null  ) {
				$scope.Client = {
						id: '',
						client_id : '', 
						client_name : '', 
						notes : '', 
						createdby : '', 
						create_date : '', 
						modifiedby : '', 
						modified_date : ''
						};
			} else {
				$scope.Client = selectedClient;
			}
		}
		
		
		
		$scope.create = function () {

		  //this is where the start code goes


		  //this is where the validate code goes


		  //this is where the post code goes
		  var deferred = $q.defer();
		  $http.post(RestURL.baseURL+'Client_Default_Activity/create_Client/', $scope.Client).success(function(response) {
		  	 alert('Client created successfully');
		  			  	 
		  	$scope.getAllClient();
		  	$('#create_client_modal').modal('hide');
		  	 deferred.resolve(response);
		  	 
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  //this is where the server response code goes

		  //this is where the transition code goes

		  
		  //this is where the end code goes 
		  return deferred.promise; 

        };

        $scope.search_for_update = function (id) {

		  //this is where the start code goes

		  //this is where the validate code goes

		  //this is where the confirm code goes

		  //this is where the post code goes
		  $http.get(RestURL.baseURL+'Client_Default_Activity/search_for_update_Client/{Client_id}/' + id).success(function(response) {
		  	 console.log('Operation search_for_update Client successful');
		  $scope.Client.id = response.id;
		  $scope.Client.client_id = response.client_id;
		  $scope.Client.client_name = response.client_name;
		  $scope.Client.notes = response.notes;
		  $scope.Client.createdby = response.createdby;
		  $scope.Client.create_date = response.create_date;
		  $scope.Client.modifiedby = response.modifiedby;
		  $scope.Client.modified_date = response.modified_date;
		  ClientId.setId(undefined)
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  });

		  //this is where the server response code goes

		  //this is where the display server response code goes

		  //this is where the transition code goes

		  //this is where the end code goes

        };

        $scope.update = function () {

		  //this is where the start code goes

		  //this is where the validate code goes

		  //this is where the confirm code goes

		  //this is where the post code goes
		  var deferred = $q.defer();
		  $http.put(RestURL.baseURL+'Client_Default_Activity/update_Client', $scope.Client).success(function(response) {
		  	 alert('Client updated successfully');
		  	$scope.getAllClient();
		  	$('#create_client_modal').modal('hide');
		  	 deferred.resolve(response);
		  	
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  //this is where the server response code goes

		  //this is where the display server response code goes

		  //this is where the transition code goes

		  //this is where the end code goes 
		  
		  return deferred.promise; 


        };

        $scope.delete = function () {

		  //this is where the start code goes

		  //this is where the validate code goes

		  //this is where the confirm code goes

		  //this is where the post code goes
		  var deferred = $q.defer();
		  $http.delete(RestURL.baseURL+'Client_Default_Activity/delete_Client/'+$scope.Client.id).success(function(response) {
		  	 alert('Client deleted successfully');
		  	$scope.getAllClient();
		  	$('#create_client_modal').modal('hide');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  //this is where the server response code goes

		  //this is where the display server response code goes

		  //this is where the transition code goes

		  //this is where the end code goes 
		  
		  return deferred.promise; 


        };

        $scope.get_all_values = function () {

		  //this is where the start code goes

		  //this is where the validate code goes

		  //this is where the confirm code goes

		  //this is where the post code goes

		  //this is where the server response code goes

		  //this is where the display server response code goes

		  //this is where the transition code goes

		  //this is where the end code goes

        };

        $scope.getAllClient = function() {
        	$http.get( RestURL.baseURL+'Client_Default_Activity/get_all_Client').success(function(response) {
        		$scope.allclient = response;
        	}).error(function(err) {
   		  	 alert('You got' + err + 'error');
  		  });
        };

        $scope.init();
		/*var id = ClientId.getId();
		if (id) {
		console.log(id);
		$scope.search_for_update(id);
		} else {
		$('#myModal').modal('toggle');
		$('#myModal').modal('show');
		$scope.searchForClient = function () {
		if ($scope.idForClient) {
		$('#myModal').modal('hide');
		id = $scope.idForClient;
		console.log(id);
		$scope.search_for_update(id);
		}	else {
		alert('You should enter ID');
		}
		};
		}*/

		$scope.$on('$viewContentLoaded', function(event) {
			var biggestHeight = 0;
			var height = 0;
			$(".screen").find('*').each(function(){
				height = $(this).position().top + $(this).height() + 100;
				if (height > biggestHeight ) {
					biggestHeight = height;
				}
			});
			$(".screen").height(biggestHeight);
		});
		

}]);


