/**
 *
 * @author Schubert Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Schubert System </br>
 * Schubert system Copyright - NewPortBay LLC copy_right_range</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/

app.controller("Question_Default_Activity", [ '$scope', '$rootScope', '$location', '$window', '$q', '$http', 'QuestionId', 'RestURL',
				    function( $scope, $rootScope, $location, $window, $q, $http, QuestionId, RestURL) {

		$scope.Question = {
		id: '',
		the_question : '', 
		display_type : '', 
		answer_id : '', 
		order_in_survey : '', 
		group_name : '', 
		group_id : '', 
		rank_importance : ''
		};



        $scope.create = function () {
		 
		  var deferred = $q.defer();
		  $http.post(RestURL.baseURL+'Question/create_Question/', $scope.Question).success(function(response) {
		  	 alert('Operation createQuestion successful');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });
		
		  return deferred.promise; 

        };

        $scope.delete = function () {

		  var deferred = $q.defer();
		  $http.delete(RestURL.baseURL+'Question/delete_Question/{Question_id}/'+$scope.Question.id).success(function(response) {
		  	 alert('Operation deleteQuestion successful');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  return deferred.promise; 


        };

        $scope.search_for_update = function (id) {

		
		  $http.get(RestURL.baseURL+'Question/search_for_update_Question/{Question_id}/' + id).success(function(response) {
		  	 console.log('Operation search_for_update Question successful');
		  $scope.Question.id = response.id;
		  $scope.Question.the_question = response.the_question;
		  $scope.Question.display_type = response.display_type;
		  $scope.Question.answer_id = response.answer_id;
		  $scope.Question.order_in_survey = response.order_in_survey;
		  $scope.Question.group_name = response.group_name;
		  $scope.Question.group_id = response.group_id;
		  $scope.Question.rank_importance = response.rank_importance;
		  $scope.Question.created_by = response.created_by;
		  $scope.Question.created_date = response.created_date;
		  $scope.Question.updated_by = response.updated_by;
		  $scope.Question.updated_date = response.updated_date;
		  $scope.Question.survey_id = response.survey_id;
		  QuestionId.setId(undefined)
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  });

		
        };

        $scope.update = function () {

		 
		  var deferred = $q.defer();
		  $http.put(RestURL.baseURL+'Question/update_Question', $scope.Question).success(function(response) {
		  	 alert('Operation updateQuestion successful');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		
		  return deferred.promise; 


        };

        $scope.search = function () {

		  //this is where the start code goes
		  	$scope.Question.the_question = $scope.Question.the_question? $scope.Question.the_question:"%%";
		  	$scope.Question.display_type = $scope.Question.display_type? $scope.Question.display_type:"%%";
		  	$scope.Question.answer_id = $scope.Question.answer_id? $scope.Question.answer_id:"%%";
		  	$scope.Question.order_in_survey = $scope.Question.order_in_survey? $scope.Question.order_in_survey:"%%";
		  	$scope.Question.group_name = $scope.Question.group_name? $scope.Question.group_name:"%%";
		  	$scope.Question.group_id = $scope.Question.group_id? $scope.Question.group_id:"%%";
		  	$scope.Question.rank_importance = $scope.Question.rank_importance? $scope.Question.rank_importance:"%%";
		  	$scope.Question.created_by = $scope.Question.created_by? $scope.Question.created_by:"%%";
		  	$scope.Question.created_date = $scope.Question.created_date? $scope.Question.created_date:"%%";
		  	$scope.Question.updated_by = $scope.Question.updated_by? $scope.Question.updated_by:"%%";
		  	$scope.Question.updated_date = $scope.Question.updated_date? $scope.Question.updated_date:"%%";
		  	$scope.Question.survey_id = $scope.Question.survey_id? $scope.Question.survey_id:"%%";

		  var deferred = $q.defer();
		  $http.get(RestURL.baseURL+'Question/search_Question?the_question='+$scope.Question.the_question+'&display_type='+$scope.Question.display_type+'&answer_id='+$scope.Question.answer_id+'&order_in_survey='+$scope.Question.order_in_survey+'&group_name='+$scope.Question.group_name+'&group_id='+$scope.Question.group_id+'&rank_importance='+$scope.Question.rank_importance+'&created_by='+$scope.Question.created_by+'&created_date='+$scope.Question.created_date+'&updated_by='+$scope.Question.updated_by+'&updated_date='+$scope.Question.updated_date+'&survey_id='+$scope.Question.survey_id).success(function(response) {
		  console.log(response);
		  var search_result = [];
		  response.forEach(function(entry) {
		  var row = {'the_question':entry.the_question,'display_type':entry.display_type,'answer_id':entry.answer_id,'order_in_survey':entry.order_in_survey,'group_name':entry.group_name,'group_id':entry.group_id,'rank_importance':entry.rank_importance,'created_by':entry.created_by,'created_date':entry.created_date,'updated_by':entry.updated_by,'updated_date':entry.updated_date,'survey_id':entry.survey_id};
		  search_result.push(row);
		  });
		  handle_search_result(search_result);
		  }).error(function(err) {
		  alert('You got' + err + 'error');
		  deferred.reject(err);
		  });

		 
		  return deferred.promise; 


        };




		/*var id = QuestionId.getId();
		if (id) {
		console.log(id);
		$scope.search_for_update(id);
		} else {
		$('#myModal').modal('toggle');
		$('#myModal').modal('show');
		$scope.searchForQuestion = function () {
		if ($scope.idForQuestion) {
		$('#myModal').modal('hide');
		id = $scope.idForQuestion;
		console.log(id);
		$scope.search_for_update(id);
		}	else {
		alert('You should enter ID');
		}
		};
		}*/

		$scope.$on('$viewContentLoaded', function(event) {
			var biggestHeight = 0;
			var height = 0;
			$(".screen").find('*').each(function(){
				height = $(this).position().top + $(this).height() + 100;
				if (height > biggestHeight ) {
					biggestHeight = height;
				}
			});
			$(".screen").height(biggestHeight);
		});

}]);


